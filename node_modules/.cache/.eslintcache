[{"/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/index.tsx":"1","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/reportWebVitals.ts":"2","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s1-main/App.tsx":"3","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw10/bll/store.ts":"4","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw01/HW1.tsx":"5","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw10/bll/loadingReducer.ts":"6","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw12/bll/themeReducer.ts":"7","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw01/message/Message.tsx":"8","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw01/friend-message/FriendMessage.tsx":"9","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw01/message-sender/MessageSender.tsx":"10"},{"size":730,"mtime":1669757277000,"results":"11","hashOfConfig":"12"},{"size":504,"mtime":1669757277000,"results":"13","hashOfConfig":"12"},{"size":589,"mtime":1669757277000,"results":"14","hashOfConfig":"12"},{"size":541,"mtime":1669757277000,"results":"15","hashOfConfig":"12"},{"size":2348,"mtime":1706218450230,"results":"16","hashOfConfig":"12"},{"size":458,"mtime":1669757277000,"results":"17","hashOfConfig":"12"},{"size":320,"mtime":1669757277000,"results":"18","hashOfConfig":"12"},{"size":1544,"mtime":1706218525436,"results":"19","hashOfConfig":"12"},{"size":1807,"mtime":1706218592744,"results":"20","hashOfConfig":"12"},{"size":2307,"mtime":1669757277000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"45mhvh",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/index.tsx",[],[],"/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/reportWebVitals.ts",[],[],"/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s1-main/App.tsx",[],[],"/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw10/bll/store.ts",[],[],"/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw01/HW1.tsx",[],[],"/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw10/bll/loadingReducer.ts",[],[],"/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw12/bll/themeReducer.ts",[],[],"/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw01/message/Message.tsx",["54"],[],"import React from 'react'\nimport s from './Message.module.css'\nimport {MessageType} from \"../HW1\";\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = {\n    message: MessageType\n}\n\n\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n    return (\n        <div id={'hw1-message-' + props.message.id} className={s.message}>\n            <div className={s.imageAndText}>\n                <img src={props.message.user.avatar}\n                     id={'hw1-avatar-' + props.message.id}\n                    // создаёт студент\n\n                    //\n                />\n                <div className={s.text}>\n                    <div id={'hw1-name-' + props.message.id} className={s.name}>\n                        {/*создаёт студент*/}\n                        {props.message.user.name}\n                        {/**/}\n                    </div>\n                    <pre id={'hw1-text-' + props.message.id} className={s.messageText}>\n                        {/*создаёт студент*/}\n                        {props.message.message.text}\n                        {/**/}\n                    </pre>\n                </div>\n            </div>\n            <div id={'hw1-time-' + props.message.id} className={s.time}>\n                {/*создаёт студент*/}\n                {props.message.message.time}\n                {/**/}\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw01/friend-message/FriendMessage.tsx",["55"],[],"import React from 'react'\nimport s from './FriendMessage.module.css'\nimport {MessageType} from \"../HW1\";\n\nexport type FriendMessageProps = {\n    message: MessageType\n}\n// создать тип вместо any и отобразить приходящие данные\nconst FriendMessage = (props: FriendMessageProps) => {\n    return (\n        <div\n            id={'hw1-friend-message-' + props.message.id}\n            className={s.friendMessage}\n        >\n            <div className={s.friendImageAndText}>\n                <img src={props.message.user.avatar}\n                     id={'hw1-friend-avatar-' + props.message.id}\n                    // создаёт студент\n\n                    //\n                />\n                <div className={s.friendText}>\n                    <div\n                        id={'hw1-friend-name-' + props.message.id}\n                        className={s.friendName}\n                    >\n                        {/*создаёт студент*/}\n                        {props.message.user.name}\n                        {/**/}\n                    </div>\n                    <pre\n                        id={'hw1-friend-text-' + props.message.id}\n                        className={s.friendMessageText}\n                    >\n                        {/*создаёт студент*/}\n                        {props.message.message.text}\n                        {/**/}\n                    </pre>\n                </div>\n            </div>\n            <div\n                id={'hw1-friend-time-' + props.message.id}\n                className={s.friendTime}\n            >\n                {/*создаёт студент*/}\n                {props.message.message.time}\n                {/**/}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendMessage\n","/Users/hello/Desktop/Incubator-home-work/02. TUESDAY/home-work-ts/src/s2-homeworks/hw01/message-sender/MessageSender.tsx",[],[],{"ruleId":"56","severity":1,"message":"57","line":17,"column":17,"nodeType":"58","endLine":22,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":16,"column":17,"nodeType":"58","endLine":21,"endColumn":19},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]